/**
 * <PRE>
 * 
 * Copyright Tony Bringarder 1998, 2025 <A href="http://bringardner.com/tony">Tony Bringardner</A>
 * 
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       <A href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</A>
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *  </PRE>
 *   
 *   
 *	@author Tony Bringardner   
 *
 *
 * ~version~V000.00.01-V000.00.00-
 */
/*
 * ConnectioinPropertiesDialog.java
 *
 * 
 */

package us.bringardner.io.filesource;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Properties;

import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author  Tony Bringardner
 */
public class PropertiesEditDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 1L;
	private boolean cancel;
	private Properties props;
	
	private boolean testing;
	private boolean accepted;

	/** Creates new form ConnectioinPropertiesDialog */
	public PropertiesEditDialog() {
		super();
		setModal(true);
		initComponents();
	}



	public boolean isCancel() {
		return cancel;
	}




	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		southPanel = new javax.swing.JPanel();
		testButton = new javax.swing.JButton();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		centerPanel = new javax.swing.JPanel();
		jLabel1 = new JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		testButton.setText("Test Connection");
		testButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				testButtonActionPerformed(evt);
			}
		});
		southPanel.add(testButton);

		okButton.setText("OK");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});
		southPanel.add(okButton);

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});
		southPanel.add(cancelButton);

		getContentPane().add(southPanel, java.awt.BorderLayout.SOUTH);

		centerPanel.setLayout(null);

		jLabel1
		.setText("There are no connection properties for the FileSource Factory.");
		centerPanel.add(jLabel1);
		jLabel1.setBounds(70, 120, 325, 16);

		Container content = getContentPane();
		
		content.add(centerPanel, java.awt.BorderLayout.CENTER);

		northPanel = new JPanel();
		
		getContentPane().add(northPanel, BorderLayout.NORTH);
		northPanel.setLayout(new BorderLayout(0, 0));

		edit = new PropertyPanel();
		content.add(edit, java.awt.BorderLayout.CENTER);
		
		pack();
	}

	


	private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("TEst");
	}

	


	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
		this.cancel = true;
		dispose();
	}

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if( !testing ) {
				accepted = true;
				dispose();
		}
	}


	
	public boolean showDialog(Properties properties) {
		props = new Properties();
		for(Object key :   properties.keySet()) {
			props.setProperty(key.toString(), properties.getProperty(key.toString()));
		}
		
		edit.setProperties(props);
		pack();
		invalidate();
		
		setLocationRelativeTo(null);
		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent arg0) {
				if( ! accepted ) {
					//  if the users closes the window without pressing ok or cancel we cancel the operation
					cancel = true;
				}
			}
			
		});
		setVisible(true);
		if(!cancel) {
			Properties p = edit.getProperties();
			for(Object key :   p.keySet()) {
				properties.setProperty(key.toString(), p.getProperty(key.toString()));
			}				
		}
		
		return accepted;
	}


	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton cancelButton;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JButton okButton;
	private javax.swing.JPanel southPanel;
	private javax.swing.JButton testButton;
	private JPanel northPanel;
	private PropertyPanel edit;
	//private JComboBox<String> comboBox;
	// End of variables declaration//GEN-END:variables

}